#!/usr/bin/env python2.7

import os
import sys

_APP_PATH = \
    os.path.join(
        os.path.dirname(os.path.abspath(__file__)),
        '..', '..', '..')

sys.path.insert(0, _APP_PATH)

import logging
import argparse
import json

import mci.config.log
import mci.images

_LOGGER = logging.getLogger(__name__)

def _get_args():
    description = "Write a list of duplicate-images to a file."
    parser = argparse.ArgumentParser(description=description)

    parser.add_argument(
        'filepath',
        help="Output file-path")

    args = parser.parse_args()
    return args

def _main():
    mci.config.log.configure(True)

    args = _get_args()

    output_filepath = args.filepath

    if os.path.exists(output_filepath) is True:
        print("Output file already exists: {}".format(output_filepath))
        sys.exit(1)

    i = mci.images.Images()
    duplicates = i.duplicate_images_gen()

    n = 0
    with open(output_filepath, 'w') as f:
        for info in duplicates:
            (id_, sku, image, (kept_image,)) = info

            json.dump(info, f)
            print("DUPLICATE: ({}) [{}] [{}] KEEP=[{}]".format(
                  id_, sku, image['file'], kept_image['file']))

            f.write("\n")

            n += 1

    print("({}) duplicate images found.".format(n))

if __name__ == '__main__':
    _main()
